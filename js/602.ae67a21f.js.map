{"version":3,"file":"js/602.ae67a21f.js","mappings":"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","sources":["webpack://jongsh_image_hosting/./src/views/WhiteListOn.vue?6bf9","webpack://jongsh_image_hosting/./src/views/WhiteListOn.vue","webpack://jongsh_image_hosting/./src/views/WhiteListOn.vue?05e5","webpack://jongsh_image_hosting/./src/utils/debounce.js","webpack://jongsh_image_hosting/./src/mixins/backgroundManager.js"],"sourcesContent":["import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"whitelist-container\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = {\n  class: \"whitelist-content\"\n};\nconst _hoisted_4 = {\n  class: \"back-button-wrapper\"\n};\nconst _hoisted_5 = {\n  class: \"status-animation\"\n};\nconst _hoisted_6 = {\n  class: \"status-icon\"\n};\nconst _hoisted_7 = {\n  class: \"status-badge\"\n};\nconst _hoisted_8 = {\n  class: \"status-info\"\n};\nconst _hoisted_9 = {\n  class: \"status-actions\"\n};\nconst _hoisted_10 = {\n  class: \"help-info\"\n};\nconst _hoisted_11 = {\n  class: \"quick-links\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"background-wrapper\",\n    innerHTML: _ctx.backgroundImagesTemplate\n  }, null, 8, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n    class: \"back-button\",\n    onClick: $options.goHome,\n    circle: \"\",\n    size: \"large\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"home\"\n    })]),\n    _: 1\n  }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_font_awesome_icon, {\n    icon: \"shield-alt\",\n    class: \"shield-icon\"\n  }), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_font_awesome_icon, {\n    icon: \"clock\",\n    class: \"clock-icon\"\n  })])])]), _createElementVNode(\"div\", _hoisted_8, [_cache[7] || (_cache[7] = _createElementVNode(\"h1\", {\n    class: \"status-title\"\n  }, \"白名单模式已启用\", -1)), _cache[8] || (_cache[8] = _createElementVNode(\"p\", {\n    class: \"status-description\"\n  }, \" 抱歉，当前已开启白名单模式，上传的图片需要审核通过后才能展示，请等待审核通过后再进行访问。 \", -1)), _cache[9] || (_cache[9] = _createElementVNode(\"p\", {\n    class: \"status-description-en\"\n  }, \" Sorry, the whitelist mode is currently enabled, the uploaded images need to be audited before they can be displayed, please wait for the audit to be passed before visiting. \", -1)), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"large\",\n    class: \"action-btn primary-btn\",\n    onClick: $options.goHome\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"home\",\n      class: \"btn-icon\"\n    }), _cache[2] || (_cache[2] = _createTextVNode(\" 返回首页 \"))]),\n    _: 1,\n    __: [2]\n  }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n    size: \"large\",\n    class: \"action-btn secondary-btn\",\n    onClick: $options.goBack\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"arrow-left\",\n      class: \"btn-icon\"\n    }), _cache[3] || (_cache[3] = _createTextVNode(\" 返回上页 \"))]),\n    _: 1,\n    __: [3]\n  }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_10, [_cache[6] || (_cache[6] = _createElementVNode(\"p\", {\n    class: \"help-text\"\n  }, \"您可以尝试：\", -1)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goHome && $options.goHome(...args)),\n    class: \"quick-link\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"cloud-upload-alt\"\n  }), _cache[4] || (_cache[4] = _createTextVNode(\" 图片上传 \"))]), _createElementVNode(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.refreshPage && $options.refreshPage(...args)),\n    class: \"quick-link\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"redo\"\n  }), _cache[5] || (_cache[5] = _createTextVNode(\" 刷新页面 \"))])])]), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n    class: \"powered-by\"\n  }, [_createElementVNode(\"p\", null, [_createTextVNode(\"Powered By: \"), _createElementVNode(\"a\", {\n    href: \"https://github.com/MarSeventh/CloudFlare-ImgBed\",\n    class: \"project-link\"\n  }, \" CloudFlare-ImgBed \")])], -1))])]), _cache[11] || (_cache[11] = _createStaticVNode(\"<div class=\\\"floating-elements\\\" data-v-cedb8612><div class=\\\"floating-shape shape-1\\\" data-v-cedb8612></div><div class=\\\"floating-shape shape-2\\\" data-v-cedb8612></div><div class=\\\"floating-shape shape-3\\\" data-v-cedb8612></div><div class=\\\"floating-shape shape-4\\\" data-v-cedb8612></div><div class=\\\"floating-shape shape-5\\\" data-v-cedb8612></div></div>\", 1))]);\n}","import \"core-js/modules/es.array.push.js\";\nimport { useHead } from '@vueuse/head';\nimport { mapGetters } from 'vuex';\nimport backgroundManager from '@/mixins/backgroundManager';\nexport default {\n  name: 'WhiteListOn',\n  mixins: [backgroundManager],\n  setup() {\n    useHead({\n      title: 'White List On',\n      meta: [{\n        name: 'robots',\n        content: 'noindex, nofollow'\n      }, {\n        name: 'viewport',\n        content: 'width=device-width, initial-scale=1'\n      }, {\n        charset: 'UTF-8'\n      }]\n    });\n  },\n  mounted() {\n    // 初始化背景图\n    this.initializeBackground('uploadBkImg', '.whitelist-container', false);\n  },\n  beforeUnmount() {\n    // 清理背景轮播定时器\n    this.clearBackgroundInterval();\n  },\n  methods: {\n    goHome() {\n      this.$router.push('/');\n    },\n    goBack() {\n      if (window.history.length > 1) {\n        this.$router.go(-1);\n      } else {\n        this.$router.push('/');\n      }\n    },\n    refreshPage() {\n      window.location.reload();\n    }\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./WhiteListOn.vue?vue&type=template&id=cedb8612&scoped=true\"\nimport script from \"./WhiteListOn.vue?vue&type=script&lang=js\"\nexport * from \"./WhiteListOn.vue?vue&type=script&lang=js\"\n\nimport \"./WhiteListOn.vue?vue&type=style&index=0&id=cedb8612&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-cedb8612\"]])\n\nexport default __exports__","// 防抖函数\r\nexport default function debounce(fn, delay = 500) {\r\n  let timer;\r\n  return function (...args) {\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => fn.apply(this, args), delay);\r\n  };\r\n}\r\n","/**\r\n * 背景图管理 Mixin\r\n * 用于统一管理页面背景图的加载和轮播逻辑\r\n */\r\n\r\nimport { mapGetters } from \"vuex\";\r\nimport debounce from \"@/utils/debounce\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      bingWallPaperIndex: 0,\r\n      customWallPaperIndex: 0,\r\n      backgroundInterval: null, // 存储轮播定时器\r\n      backgroundInitParams: null, // 存储初始化参数，用于主题切换时重新初始化\r\n      isChanging: false, // 防止重复修改配置导致多次初始化\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(\"base\", [\"storeUserConfig\", \"storeBingWallPapers\", \"storeUseDarkMode\"]),\r\n    useDarkMode() {\r\n      return this.storeUseDarkMode || document.documentElement.classList.contains(\"dark\");\r\n    },\r\n    bkInterval() {\r\n      return this.storeUserConfig?.bkInterval || 3000;\r\n    },\r\n    bkOpacity() {\r\n      return this.storeUserConfig?.bkOpacity || 1;\r\n    },\r\n    // 提供背景图片元素的模板\r\n    backgroundImagesTemplate() {\r\n      return `\r\n        <img id=\"bg1\" class=\"background-image1\" alt=\"Background Image\"/>\r\n        <img id=\"bg2\" class=\"background-image2\" alt=\"Background Image\"/>\r\n      `;\r\n    },\r\n    // 提供背景图片的CSS样式\r\n    backgroundImagesStyles() {\r\n      return `\r\n        .background-image1, .background-image2 {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          object-fit: cover;\r\n          z-index: -1;\r\n          opacity: 0;\r\n          transform: scale(1);\r\n          transition: opacity 0.8s cubic-bezier(0.42, 0, 0.58, 1), transform ${\r\n            this.bkInterval / 1000\r\n          }s cubic-bezier(0.42, 0, 0.58, 1);\r\n        }\r\n      `;\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    // 监听深色模式切换\r\n    useDarkMode: debounce(async function (newVal, oldVal) {\r\n      if (newVal !== oldVal && this.backgroundInitParams && !this.isChanging) {\r\n        await this.smoothThemeTransition(\r\n          this.backgroundInitParams.configKey,\r\n          this.backgroundInitParams.containerSelector,\r\n          this.backgroundInitParams.useDefaultBackground\r\n        );\r\n        this.isChanging = false; // 设置标志，防止重复触发\r\n      }\r\n    }, 300),\r\n  },\r\n\r\n  mounted() {\r\n    // 动态注入背景图片的CSS样式\r\n    this.injectBackgroundStyles();\r\n  },\r\n\r\n  beforeUnmount() {\r\n    // 组件销毁前清除定时器\r\n    if (this.backgroundInterval) {\r\n      clearInterval(this.backgroundInterval);\r\n    }\r\n    // 立即清除背景图片，不使用过渡效果\r\n    this.clearBackgroundImages(true);\r\n    // 移除动态注入的样式\r\n    this.removeBackgroundStyles();\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * 动态注入背景图片样式\r\n     */\r\n    injectBackgroundStyles() {\r\n      const styleId = \"background-manager-styles\";\r\n      if (!document.getElementById(styleId)) {\r\n        const style = document.createElement(\"style\");\r\n        style.id = styleId;\r\n        style.textContent = this.backgroundImagesStyles;\r\n        document.head.appendChild(style);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 移除动态注入的样式\r\n     */\r\n    removeBackgroundStyles() {\r\n      const styleId = \"background-manager-styles\";\r\n      const existingStyle = document.getElementById(styleId);\r\n      if (existingStyle) {\r\n        existingStyle.remove();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 动态创建背景图片元素\r\n     * @param {HTMLElement} container - 要插入背景图片的容器元素\r\n     */\r\n    createBackgroundElements(container) {\r\n      if (!container) {\r\n        console.warn(\"未提供有效的容器元素\");\r\n        return;\r\n      }\r\n      // 检查是否已经存在背景图片元素\r\n      if (document.getElementById(\"bg1\") || document.getElementById(\"bg2\")) {\r\n        return;\r\n      }\r\n      // 创建 bg1 元素\r\n      const bg1 = document.createElement(\"img\");\r\n      bg1.id = \"bg1\";\r\n      bg1.className = \"background-image1\";\r\n      bg1.alt = \"Background Image\";\r\n      // 创建 bg2 元素\r\n      const bg2 = document.createElement(\"img\");\r\n      bg2.id = \"bg2\";\r\n      bg2.className = \"background-image2\";\r\n      bg2.alt = \"Background Image\";\r\n      // 将元素插入到容器的开头\r\n      container.insertBefore(bg2, container.firstChild);\r\n      container.insertBefore(bg1, container.firstChild);\r\n    },\r\n\r\n    /**\r\n     * 初始化背景图\r\n     * @param {string} configKey - 用户配置中的背景图配置键名\r\n     * @param {string} containerSelector - 容器选择器，用于设置透明背景\r\n     * @param {boolean} useDefaultBackground - 是否使用默认背景图\r\n     */\r\n    async initializeBackground(configKey, containerSelector = \".login\", useDefaultBackground = false) {\r\n      // 保存初始化参数，用于主题切换时重新初始化\r\n      this.backgroundInitParams = {\r\n        configKey,\r\n        containerSelector,\r\n        useDefaultBackground,\r\n      };\r\n      // 如果需要自动创建元素且元素不存在，则创建\r\n      const container = document.querySelector(containerSelector);\r\n      if (container && (!document.getElementById(\"bg1\") || !document.getElementById(\"bg2\"))) {\r\n        this.createBackgroundElements(container);\r\n      }\r\n\r\n      const bg1 = document.getElementById(\"bg1\");\r\n      const bg2 = document.getElementById(\"bg2\");\r\n      if (!bg1 || !bg2) {\r\n        console.warn(\"背景图元素 #bg1 或 #bg2 未找到，请确保页面中包含这些元素\");\r\n        return;\r\n      }\r\n\r\n      const backgroundConfig = this.storeUserConfig?.[configKey];\r\n      if (backgroundConfig === \"bing\") {\r\n        await this.setupBingWallpaper(bg1, bg2, container);\r\n      } else if (Array.isArray(backgroundConfig) && backgroundConfig.length > 1) {\r\n        this.setupCustomWallpaperCarousel(bg1, bg2, backgroundConfig, container);\r\n      } else if (Array.isArray(backgroundConfig) && backgroundConfig.length === 1) {\r\n        this.setupSingleCustomWallpaper(bg1, backgroundConfig[0], container);\r\n      } else if (useDefaultBackground) {\r\n        this.setupDefaultWallpaper(bg1, container);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 设置 Bing 壁纸轮播\r\n     */\r\n    async setupBingWallpaper(bg1, bg2, container) {\r\n      if (!this.storeBingWallPapers) {\r\n        await this.$store.dispatch(\"base/fetchBingWallPapers\", {\r\n          type: store.state.base.userConfig?.loginBkImg || \"random\",\r\n          num: 5,\r\n        });\r\n      }\r\n      if (this.storeBingWallPapers.length === 0) return;\r\n      this.loadBackgroundImage(bg1, this.storeBingWallPapers[this.bingWallPaperIndex], container, true);\r\n      this.backgroundInterval = setInterval(() => {\r\n        this.switchWallpaper(bg1, bg2, this.storeBingWallPapers);\r\n      }, this.bkInterval);\r\n    },\r\n\r\n    /**\r\n     * 设置自定义壁纸轮播\r\n     */\r\n    setupCustomWallpaperCarousel(bg1, bg2, wallpapers, container) {\r\n      this.loadBackgroundImage(bg1, wallpapers[this.customWallPaperIndex], container, true);\r\n\r\n      this.backgroundInterval = setInterval(() => {\r\n        this.switchWallpaper(bg1, bg2, wallpapers);\r\n      }, this.bkInterval);\r\n    },\r\n\r\n    /**\r\n     * 设置单张自定义壁纸\r\n     */\r\n    setupSingleCustomWallpaper(bg1, wallpaperUrl, container) {\r\n      this.loadBackgroundImage(bg1, wallpaperUrl, container);\r\n    },\r\n\r\n    /**\r\n     * 设置默认壁纸\r\n     */\r\n    setupDefaultWallpaper(bg1, container) {\r\n      // 根据当前深色模式状态选择背景图\r\n      const isDark = this.useDarkMode;\r\n      const defaultImage = isDark\r\n        ? require(\"@/assets/background-dark.webp\")\r\n        : require(\"@/assets/background-light.webp\");\r\n\r\n      this.loadBackgroundImage(bg1, defaultImage, container);\r\n    },\r\n\r\n    /**\r\n     * 加载背景图片\r\n     */\r\n    loadBackgroundImage(imgElement, imageSrc, container, useScale) {\r\n      imgElement.src = imageSrc;\r\n      imgElement.onload = () => {\r\n        // 先设置初始状态\r\n        imgElement.style.opacity = 1;\r\n        imgElement.style.transform = \"scale(1)\";\r\n\r\n        if (useScale) {\r\n          requestAnimationFrame(() => {\r\n            imgElement.style.transform = \"scale(1.25)\";\r\n          });\r\n        }\r\n\r\n        // 设置容器背景为透明\r\n        if (container) {\r\n          container.style.background = \"transparent\";\r\n        }\r\n      };\r\n    },\r\n\r\n    /**\r\n     * 切换自定义壁纸\r\n     */\r\n    switchWallpaper(bg1, bg2, wallpapers) {\r\n      if (wallpapers.length === 0) return;\r\n      const curBg = bg1.style.opacity != 0 ? bg1 : bg2;\r\n      const nextBg = bg1.style.opacity != 0 ? bg2 : bg1;\r\n\r\n      curBg.style.opacity = 0;\r\n      curBg.style.transform = \"scale(1)\";\r\n      this.customWallPaperIndex = (this.customWallPaperIndex + 1) % wallpapers.length;\r\n\r\n      nextBg.src = wallpapers[this.customWallPaperIndex];\r\n      nextBg.onload = () => {\r\n        nextBg.style.opacity = this.bkOpacity;\r\n        nextBg.style.transform = \"scale(1.25)\";\r\n      };\r\n    },\r\n\r\n    /**\r\n     * 清除背景轮播定时器\r\n     */\r\n    clearBackgroundInterval() {\r\n      if (this.backgroundInterval) {\r\n        clearInterval(this.backgroundInterval);\r\n        this.backgroundInterval = null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 清除背景图片显示（带过渡效果）\r\n     * @param {boolean} immediate - 是否立即清除，不使用过渡效果\r\n     */\r\n    async clearBackgroundImages(immediate = false) {\r\n      const bg1 = document.getElementById(\"bg1\");\r\n      const bg2 = document.getElementById(\"bg2\");\r\n\r\n      await Promise.all(\r\n        [bg1, bg2].map((bg) => {\r\n          if (!bg) return;\r\n          if (immediate) {\r\n            bg.style.transition = \"none\";\r\n            bg.style.transform = \"scale(1)\";\r\n            bg.style.opacity = 0;\r\n            bg.src = \"\";\r\n            requestAnimationFrame(() => {\r\n              bg.style.transition = `opacity 0.8s cubic-bezier(0.42, 0, 0.58, 1), transform ${\r\n                this.bkInterval / 1000\r\n              }s cubic-bezier(0.42, 0, 0.58, 1)`;\r\n            });\r\n          } else {\r\n            bg.style.opacity = 0;\r\n            bg.style.transform = \"scale(1)\";\r\n            return new Promise((resolve) => {\r\n              setTimeout(() => {\r\n                bg.src = \"\";\r\n                bg.style.transition = \"none\";\r\n                requestAnimationFrame(() => {\r\n                  bg.style.transition = `opacity 0.8s cubic-bezier(0.42, 0, 0.58, 1), transform ${\r\n                    this.bkInterval / 1000\r\n                  }s cubic-bezier(0.42, 0, 0.58, 1)`;\r\n                  resolve();\r\n                });\r\n              }, 800);\r\n            });\r\n          }\r\n        })\r\n      );\r\n    },\r\n\r\n    /**\r\n     * 平滑主题切换（用于响应主题模式变化）\r\n     * @param {string} configKey - 用户配置中的背景图配置键名\r\n     * @param {string} containerSelector - 容器选择器\r\n     * @param {boolean} useDefaultBackground - 是否使用默认背景图\r\n     */\r\n    async smoothThemeTransition(configKey, containerSelector = \".login\", useDefaultBackground = false) {\r\n      this.isChanging = true; // 设置标志，防止重复触发\r\n      const backgroundConfig = this.storeUserConfig?.[configKey];\r\n\r\n      // 如果不是默认背景配置，则直接重新初始化（自定义背景不受主题影响）\r\n      if (!useDefaultBackground || backgroundConfig !== undefined) {\r\n        await this.reinitializeBackground(configKey, containerSelector, useDefaultBackground);\r\n        return;\r\n      }\r\n\r\n      // 对于默认背景，执行平滑过渡\r\n      const bg1 = document.getElementById(\"bg1\");\r\n      const bg2 = document.getElementById(\"bg2\");\r\n\r\n      if (!bg1 || !bg2) {\r\n        // 如果背景元素不存在，直接重新初始化\r\n        await this.reinitializeBackground(configKey, containerSelector, useDefaultBackground);\r\n        return;\r\n      }\r\n\r\n      // 确定当前显示的背景和下一个背景\r\n      const currentBg = bg1.style.opacity != 0 ? bg1 : bg2;\r\n      const nextBg = bg1.style.opacity != 0 ? bg2 : bg1;\r\n\r\n      // 获取新主题对应的背景图\r\n      const isDark = this.useDarkMode;\r\n      const newThemeImage = isDark\r\n        ? require(\"@/assets/background-dark.webp\")\r\n        : require(\"@/assets/background-light.webp\");\r\n\r\n      // 预加载新背景图\r\n      await new Promise((resolve, reject) => {\r\n        nextBg.src = newThemeImage;\r\n        nextBg.onload = () => {\r\n          currentBg.style.opacity = 0;\r\n          nextBg.style.opacity = this.bkOpacity;\r\n          resolve();\r\n        };\r\n        const container = document.querySelector(containerSelector);\r\n        if (container) container.style.background = \"transparent\";\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 重新初始化背景图（用于响应配置变化）\r\n     */\r\n    async reinitializeBackground(configKey, containerSelector = \".login\", useDefaultBackground = false) {\r\n      this.clearBackgroundInterval();\r\n      await this.clearBackgroundImages(false);\r\n      this.bingWallPaperIndex = 0;\r\n      this.customWallPaperIndex = 0;\r\n      await this.initializeBackground(configKey, containerSelector, useDefaultBackground);\r\n    },\r\n  },\r\n};\r\n"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","render","_ctx","_cache","$props","$setup","$data","$options","_component_font_awesome_icon","_component_el_button","innerHTML","backgroundImagesTemplate","onClick","goHome","circle","size","default","icon","_","type","__","goBack","href","args","refreshPage","name","mixins","backgroundManager","setup","u","title","meta","content","charset","mounted","this","initializeBackground","beforeUnmount","clearBackgroundInterval","methods","$router","push","window","history","length","go","location","reload","__exports__","debounce","fn","delay","timer","clearTimeout","setTimeout","apply","data","bingWallPaperIndex","customWallPaperIndex","backgroundInterval","backgroundInitParams","isChanging","computed","mapGetters","useDarkMode","storeUseDarkMode","document","documentElement","classList","contains","bkInterval","storeUserConfig","bkOpacity","backgroundImagesStyles","watch","async","newVal","oldVal","smoothThemeTransition","configKey","containerSelector","useDefaultBackground","injectBackgroundStyles","clearInterval","clearBackgroundImages","removeBackgroundStyles","styleId","getElementById","style","createElement","id","textContent","head","appendChild","existingStyle","remove","createBackgroundElements","container","console","warn","bg1","className","alt","bg2","insertBefore","firstChild","querySelector","backgroundConfig","setupBingWallpaper","Array","isArray","setupCustomWallpaperCarousel","setupSingleCustomWallpaper","setupDefaultWallpaper","storeBingWallPapers","$store","dispatch","store","state","base","userConfig","loginBkImg","num","loadBackgroundImage","setInterval","switchWallpaper","wallpapers","wallpaperUrl","isDark","defaultImage","require","imgElement","imageSrc","useScale","src","onload","opacity","transform","requestAnimationFrame","background","curBg","nextBg","immediate","Promise","all","map","bg","transition","resolve","undefined","reinitializeBackground","currentBg","newThemeImage","reject"],"sourceRoot":""}