{"version":3,"file":"js/474.abbe0a27.js","mappings":"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","sources":["webpack://sanyue_imghub/./src/views/NotFound.vue?7333","webpack://sanyue_imghub/./src/views/NotFound.vue","webpack://sanyue_imghub/./src/views/NotFound.vue?5f0d","webpack://sanyue_imghub/./src/mixins/backgroundManager.js"],"sourcesContent":["import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"not-found-container\"\n};\nconst _hoisted_2 = [\"innerHTML\"];\nconst _hoisted_3 = {\n  class: \"not-found-content\"\n};\nconst _hoisted_4 = {\n  class: \"back-button-wrapper\"\n};\nconst _hoisted_5 = {\n  class: \"error-animation\"\n};\nconst _hoisted_6 = {\n  class: \"error-image\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"error-info\"\n};\nconst _hoisted_9 = {\n  class: \"error-actions\"\n};\nconst _hoisted_10 = {\n  class: \"help-links\"\n};\nconst _hoisted_11 = {\n  class: \"quick-links\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_font_awesome_icon = _resolveComponent(\"font-awesome-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: \"background-wrapper\",\n    innerHTML: _ctx.backgroundImagesTemplate\n  }, null, 8, _hoisted_2), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_button, {\n    class: \"back-button\",\n    onClick: $options.goHome,\n    circle: \"\",\n    size: \"large\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"home\"\n    })]),\n    _: 1\n  }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_5, [_cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n    class: \"error-number\"\n  }, [_createElementVNode(\"span\", {\n    class: \"four\"\n  }, \"4\"), _createElementVNode(\"span\", {\n    class: \"zero\"\n  }, \"0\"), _createElementVNode(\"span\", {\n    class: \"four\"\n  }, \"4\")], -1)), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    src: $options.errorImage,\n    alt: \"404\",\n    class: \"floating-image\"\n  }, null, 8, _hoisted_7)])]), _createElementVNode(\"div\", _hoisted_8, [_cache[10] || (_cache[10] = _createElementVNode(\"h1\", {\n    class: \"error-title\"\n  }, \"页面走丢了\", -1)), _cache[11] || (_cache[11] = _createElementVNode(\"p\", {\n    class: \"error-description\"\n  }, \" 抱歉，您访问的页面可能已被删除、更名或暂时不可用 \", -1)), _createElementVNode(\"div\", _hoisted_9, [_createVNode(_component_el_button, {\n    type: \"primary\",\n    size: \"large\",\n    class: \"action-btn primary-btn\",\n    onClick: $options.goHome\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"home\",\n      class: \"btn-icon\"\n    }), _cache[4] || (_cache[4] = _createTextVNode(\" 返回首页 \"))]),\n    _: 1,\n    __: [4]\n  }, 8, [\"onClick\"]), _createVNode(_component_el_button, {\n    size: \"large\",\n    class: \"action-btn secondary-btn\",\n    onClick: $options.goBack\n  }, {\n    default: _withCtx(() => [_createVNode(_component_font_awesome_icon, {\n      icon: \"arrow-left\",\n      class: \"btn-icon\"\n    }), _cache[5] || (_cache[5] = _createTextVNode(\" 返回上页 \"))]),\n    _: 1,\n    __: [5]\n  }, 8, [\"onClick\"])]), _createElementVNode(\"div\", _hoisted_10, [_cache[9] || (_cache[9] = _createElementVNode(\"p\", {\n    class: \"help-text\"\n  }, \"也许您想要：\", -1)), _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goHome && $options.goHome(...args)),\n    class: \"quick-link\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"cloud-upload-alt\"\n  }), _cache[6] || (_cache[6] = _createTextVNode(\" 图片上传 \"))]), _createElementVNode(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goDashboard && $options.goDashboard(...args)),\n    class: \"quick-link\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"tachometer-alt\"\n  }), _cache[7] || (_cache[7] = _createTextVNode(\" 管理面板 \"))]), _createElementVNode(\"a\", {\n    href: \"javascript:void(0)\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.refreshPage && $options.refreshPage(...args)),\n    class: \"quick-link\"\n  }, [_createVNode(_component_font_awesome_icon, {\n    icon: \"redo\"\n  }), _cache[8] || (_cache[8] = _createTextVNode(\" 刷新页面 \"))])])])])]), _cache[12] || (_cache[12] = _createStaticVNode(\"<div class=\\\"floating-elements\\\" data-v-fa10d7b4><div class=\\\"floating-shape shape-1\\\" data-v-fa10d7b4></div><div class=\\\"floating-shape shape-2\\\" data-v-fa10d7b4></div><div class=\\\"floating-shape shape-3\\\" data-v-fa10d7b4></div><div class=\\\"floating-shape shape-4\\\" data-v-fa10d7b4></div><div class=\\\"floating-shape shape-5\\\" data-v-fa10d7b4></div></div>\", 1))]);\n}","import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from 'vuex';\nimport backgroundManager from '@/mixins/backgroundManager';\nexport default {\n  name: 'NotFound',\n  mixins: [backgroundManager],\n  computed: {\n    ...mapGetters(['useDarkMode', 'userConfig']),\n    errorImage() {\n      // 使用项目中已有的404图片\n      return require('@/assets/404.png');\n    }\n  },\n  mounted() {\n    // 初始化背景图\n    this.initializeBackground('uploadBkImg', '.not-found-container', false);\n  },\n  beforeUnmount() {\n    // 清理背景轮播定时器\n    this.clearBackgroundInterval();\n  },\n  methods: {\n    goHome() {\n      this.$router.push('/');\n    },\n    goBack() {\n      if (window.history.length > 1) {\n        this.$router.go(-1);\n      } else {\n        this.$router.push('/');\n      }\n    },\n    goDashboard() {\n      this.$router.push('/dashboard');\n    },\n    refreshPage() {\n      window.location.reload();\n    }\n  }\n};","/* unplugin-vue-components disabled */import { render } from \"./NotFound.vue?vue&type=template&id=fa10d7b4&scoped=true\"\nimport script from \"./NotFound.vue?vue&type=script&lang=js\"\nexport * from \"./NotFound.vue?vue&type=script&lang=js\"\n\nimport \"./NotFound.vue?vue&type=style&index=0&id=fa10d7b4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-fa10d7b4\"]])\n\nexport default __exports__","/**\r\n * 背景图管理 Mixin\r\n * 用于统一管理页面背景图的加载和轮播逻辑\r\n */\r\n\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      bingWallPaperIndex: 0,\r\n      customWallPaperIndex: 0,\r\n      backgroundInterval: null, // 存储轮播定时器\r\n      backgroundInitParams: null, // 存储初始化参数，用于主题切换时重新初始化\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"userConfig\", \"bingWallPapers\", \"useDarkMode\"]),\r\n    bkInterval() {\r\n      return this.userConfig?.bkInterval || 3000;\r\n    },\r\n    bkOpacity() {\r\n      return this.userConfig?.bkOpacity || 1;\r\n    },\r\n    // 提供背景图片元素的模板\r\n    backgroundImagesTemplate() {\r\n      return `\r\n        <img id=\"bg1\" class=\"background-image1\" alt=\"Background Image\"/>\r\n        <img id=\"bg2\" class=\"background-image2\" alt=\"Background Image\"/>\r\n      `;\r\n    },\r\n    // 提供背景图片的CSS样式\r\n    backgroundImagesStyles() {\r\n      return `\r\n        .background-image1, .background-image2 {\r\n          position: fixed;\r\n          top: 0;\r\n          left: 0;\r\n          width: 100%;\r\n          height: 100%;\r\n          object-fit: cover;\r\n          z-index: -1;\r\n          opacity: 0;\r\n          transform: scale(1);\r\n          transition: opacity 1s cubic-bezier(0.42, 0, 0.58, 1), transform ${\r\n            this.bkInterval / 1000\r\n          }s cubic-bezier(0.42, 0, 0.58, 1);\r\n        }\r\n      `;\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    // 监听深色模式切换\r\n    useDarkMode(newVal, oldVal) {\r\n      // 只有在值真正改变且已经初始化过背景时才平滑切换主题\r\n      if (newVal !== oldVal && this.backgroundInitParams) {\r\n        this.$nextTick(() => {\r\n          this.smoothThemeTransition(\r\n            this.backgroundInitParams.configKey,\r\n            this.backgroundInitParams.containerSelector,\r\n            this.backgroundInitParams.useDefaultBackground\r\n          );\r\n        });\r\n      }\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    // 动态注入背景图片的CSS样式\r\n    this.injectBackgroundStyles();\r\n  },\r\n\r\n  beforeUnmount() {\r\n    // 组件销毁前清除定时器\r\n    if (this.backgroundInterval) {\r\n      clearInterval(this.backgroundInterval);\r\n    }\r\n    // 立即清除背景图片，不使用过渡效果\r\n    this.clearBackgroundImages(true);\r\n    // 移除动态注入的样式\r\n    this.removeBackgroundStyles();\r\n  },\r\n\r\n  methods: {\r\n    /**\r\n     * 动态注入背景图片样式\r\n     */\r\n    injectBackgroundStyles() {\r\n      const styleId = \"background-manager-styles\";\r\n      if (!document.getElementById(styleId)) {\r\n        const style = document.createElement(\"style\");\r\n        style.id = styleId;\r\n        style.textContent = this.backgroundImagesStyles;\r\n        document.head.appendChild(style);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 移除动态注入的样式\r\n     */\r\n    removeBackgroundStyles() {\r\n      const styleId = \"background-manager-styles\";\r\n      const existingStyle = document.getElementById(styleId);\r\n      if (existingStyle) {\r\n        existingStyle.remove();\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 动态创建背景图片元素\r\n     * @param {HTMLElement} container - 要插入背景图片的容器元素\r\n     */\r\n    createBackgroundElements(container) {\r\n      if (!container) {\r\n        console.warn(\"未提供有效的容器元素\");\r\n        return;\r\n      }\r\n      // 检查是否已经存在背景图片元素\r\n      if (document.getElementById(\"bg1\") || document.getElementById(\"bg2\")) {\r\n        return;\r\n      }\r\n      // 创建 bg1 元素\r\n      const bg1 = document.createElement(\"img\");\r\n      bg1.id = \"bg1\";\r\n      bg1.className = \"background-image1\";\r\n      bg1.alt = \"Background Image\";\r\n      // 创建 bg2 元素\r\n      const bg2 = document.createElement(\"img\");\r\n      bg2.id = \"bg2\";\r\n      bg2.className = \"background-image2\";\r\n      bg2.alt = \"Background Image\";\r\n      // 将元素插入到容器的开头\r\n      container.insertBefore(bg2, container.firstChild);\r\n      container.insertBefore(bg1, container.firstChild);\r\n    },\r\n\r\n    /**\r\n     * 初始化背景图\r\n     * @param {string} configKey - 用户配置中的背景图配置键名\r\n     * @param {string} containerSelector - 容器选择器，用于设置透明背景\r\n     * @param {boolean} useDefaultBackground - 是否使用默认背景图\r\n     */\r\n    initializeBackground(configKey, containerSelector = \".login\", useDefaultBackground = false) {\r\n      // 保存初始化参数，用于主题切换时重新初始化\r\n      this.backgroundInitParams = {\r\n        configKey,\r\n        containerSelector,\r\n        useDefaultBackground,\r\n      };\r\n      // 如果需要自动创建元素且元素不存在，则创建\r\n      const container = document.querySelector(containerSelector);\r\n      if (container && (!document.getElementById(\"bg1\") || !document.getElementById(\"bg2\"))) {\r\n        this.createBackgroundElements(container);\r\n      }\r\n\r\n      const bg1 = document.getElementById(\"bg1\");\r\n      const bg2 = document.getElementById(\"bg2\");\r\n      if (!bg1 || !bg2) {\r\n        console.warn(\"背景图元素 #bg1 或 #bg2 未找到，请确保页面中包含这些元素\");\r\n        return;\r\n      }\r\n\r\n      const backgroundConfig = this.userConfig?.[configKey];\r\n      if (backgroundConfig === \"bing\") {\r\n        this.setupBingWallpaper(bg1, bg2, container);\r\n      } else if (Array.isArray(backgroundConfig) && backgroundConfig.length > 1) {\r\n        this.setupCustomWallpaperCarousel(bg1, bg2, backgroundConfig, container);\r\n      } else if (Array.isArray(backgroundConfig) && backgroundConfig.length === 1) {\r\n        this.setupSingleCustomWallpaper(bg1, backgroundConfig[0], container);\r\n      } else if (useDefaultBackground) {\r\n        this.setupDefaultWallpaper(bg1, container);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 设置 Bing 壁纸轮播\r\n     */\r\n    setupBingWallpaper(bg1, bg2, container) {\r\n      this.$store.dispatch(\"fetchBingWallPapers\").then(() => {\r\n        if (this.bingWallPapers.length === 0) return;\r\n\r\n        this.loadBackgroundImage(bg1, this.bingWallPapers[this.bingWallPaperIndex], container, true);\r\n        this.backgroundInterval = setInterval(() => {\r\n          this.switchWallpaper(bg1, bg2, this.bingWallPapers);\r\n        }, this.bkInterval);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * 设置自定义壁纸轮播\r\n     */\r\n    setupCustomWallpaperCarousel(bg1, bg2, wallpapers, container) {\r\n      this.loadBackgroundImage(bg1, wallpapers[this.customWallPaperIndex], container, true);\r\n\r\n      this.backgroundInterval = setInterval(() => {\r\n        this.switchWallpaper(bg1, bg2, wallpapers);\r\n      }, this.bkInterval);\r\n    },\r\n\r\n    /**\r\n     * 设置单张自定义壁纸\r\n     */\r\n    setupSingleCustomWallpaper(bg1, wallpaperUrl, container) {\r\n      this.loadBackgroundImage(bg1, wallpaperUrl, container);\r\n    },\r\n\r\n    /**\r\n     * 设置默认壁纸\r\n     */\r\n    setupDefaultWallpaper(bg1, container) {\r\n      // 根据当前深色模式状态选择背景图\r\n      const isDark = this.useDarkMode;\r\n      const defaultImage = isDark\r\n        ? require(\"@/assets/background-dark.webp\")\r\n        : require(\"@/assets/background-light.webp\");\r\n\r\n      this.loadBackgroundImage(bg1, defaultImage, container);\r\n    },\r\n\r\n    /**\r\n     * 加载背景图片\r\n     */\r\n    loadBackgroundImage(imgElement, imageSrc, container, useScale) {\r\n      imgElement.src = imageSrc;\r\n      imgElement.onload = () => {\r\n        // 先设置初始状态\r\n        imgElement.style.opacity = 1;\r\n        imgElement.style.transform = \"scale(1)\";\r\n\r\n        if (useScale) {\r\n          requestAnimationFrame(() => {\r\n            imgElement.style.transform = \"scale(1.25)\";\r\n          });\r\n        }\r\n\r\n        // 设置容器背景为透明\r\n        if (container) {\r\n          container.style.background = \"transparent\";\r\n        }\r\n      };\r\n    },\r\n\r\n    /**\r\n     * 切换自定义壁纸\r\n     */\r\n    switchWallpaper(bg1, bg2, wallpapers) {\r\n      if (wallpapers.length === 0) return;\r\n      const curBg = bg1.style.opacity != 0 ? bg1 : bg2;\r\n      const nextBg = bg1.style.opacity != 0 ? bg2 : bg1;\r\n\r\n      curBg.style.opacity = 0;\r\n      curBg.style.transform = \"scale(1)\";\r\n      this.customWallPaperIndex = (this.customWallPaperIndex + 1) % wallpapers.length;\r\n\r\n      nextBg.src = wallpapers[this.customWallPaperIndex];\r\n      nextBg.onload = () => {\r\n        nextBg.style.opacity = this.bkOpacity;\r\n        nextBg.style.transform = \"scale(1.25)\";\r\n      };\r\n    },\r\n\r\n    /**\r\n     * 清除背景轮播定时器\r\n     */\r\n    clearBackgroundInterval() {\r\n      if (this.backgroundInterval) {\r\n        clearInterval(this.backgroundInterval);\r\n        this.backgroundInterval = null;\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 清除背景图片显示（带过渡效果）\r\n     * @param {boolean} immediate - 是否立即清除，不使用过渡效果\r\n     */\r\n    clearBackgroundImages(immediate = false) {\r\n      const bg1 = document.getElementById(\"bg1\");\r\n      const bg2 = document.getElementById(\"bg2\");\r\n\r\n      if (immediate) {\r\n        // 立即清除，不使用过渡效果\r\n        if (bg1) {\r\n          bg1.style.transition = \"none\";\r\n          bg1.style.opacity = 0;\r\n          bg1.src = \"\";\r\n          // 恢复过渡效果\r\n          setTimeout(() => {\r\n            if (bg1)\r\n              bg1.style.transition = `opacity 1s cubic-bezier(0.42, 0, 0.58, 1), transform ${\r\n                this.bkInterval / 1000\r\n              }s cubic-bezier(0.42, 0, 0.58, 1)`;\r\n          }, 50);\r\n        }\r\n        if (bg2) {\r\n          bg2.style.transition = \"none\";\r\n          bg2.style.opacity = 0;\r\n          bg2.src = \"\";\r\n          // 恢复过渡效果\r\n          setTimeout(() => {\r\n            if (bg2)\r\n              bg2.style.transition = `opacity 1s cubic-bezier(0.42, 0, 0.58, 1), transform ${\r\n                this.bkInterval / 1000\r\n              }s cubic-bezier(0.42, 0, 0.58, 1)`;\r\n          }, 50);\r\n        }\r\n      } else {\r\n        // 使用过渡效果淡出\r\n        if (bg1) {\r\n          bg1.style.opacity = 0;\r\n          setTimeout(() => {\r\n            if (bg1) bg1.src = \"\";\r\n          }, 800); // 等待过渡完成后清除src\r\n        }\r\n        if (bg2) {\r\n          bg2.style.opacity = 0;\r\n          setTimeout(() => {\r\n            if (bg2) bg2.src = \"\";\r\n          }, 800); // 等待过渡完成后清除src\r\n        }\r\n      }\r\n    },\r\n\r\n    /**\r\n     * 平滑主题切换（用于响应主题模式变化）\r\n     * @param {string} configKey - 用户配置中的背景图配置键名\r\n     * @param {string} containerSelector - 容器选择器\r\n     * @param {boolean} useDefaultBackground - 是否使用默认背景图\r\n     */\r\n    smoothThemeTransition(configKey, containerSelector = \".login\", useDefaultBackground = false) {\r\n      const backgroundConfig = this.userConfig?.[configKey];\r\n\r\n      // 如果不是默认背景配置，则直接重新初始化（自定义背景不受主题影响）\r\n      if (!useDefaultBackground || backgroundConfig !== undefined) {\r\n        this.reinitializeBackground(configKey, containerSelector, useDefaultBackground);\r\n        return;\r\n      }\r\n\r\n      // 对于默认背景，执行平滑过渡\r\n      const bg1 = document.getElementById(\"bg1\");\r\n      const bg2 = document.getElementById(\"bg2\");\r\n\r\n      if (!bg1 || !bg2) {\r\n        // 如果背景元素不存在，直接重新初始化\r\n        this.reinitializeBackground(configKey, containerSelector, useDefaultBackground);\r\n        return;\r\n      }\r\n\r\n      // 确定当前显示的背景和下一个背景\r\n      const currentBg = bg1.style.opacity != 0 ? bg1 : bg2;\r\n      const nextBg = bg1.style.opacity != 0 ? bg2 : bg1;\r\n\r\n      // 获取新主题对应的背景图\r\n      const isDark = this.useDarkMode;\r\n      const newThemeImage = isDark\r\n        ? require(\"@/assets/background-dark.webp\")\r\n        : require(\"@/assets/background-light.webp\");\r\n\r\n      // 预加载新背景图\r\n      const preloadImg = new Image();\r\n      preloadImg.onload = () => {\r\n        // 设置下一个背景的图片源\r\n        nextBg.src = newThemeImage;\r\n\r\n        // 等待图片加载完成后执行淡入淡出过渡\r\n        nextBg.onload = () => {\r\n          // 淡出当前背景\r\n          currentBg.style.opacity = 0;\r\n\r\n          // 稍微延迟后淡入新背景，确保过渡效果平滑\r\n          setTimeout(() => {\r\n            nextBg.style.opacity = this.bkOpacity;\r\n\r\n            // 设置容器背景为透明\r\n            const container = document.querySelector(containerSelector);\r\n            if (container) {\r\n              container.style.background = \"transparent\";\r\n            }\r\n          }, 50); // 50ms 延迟，让淡出效果先开始\r\n        };\r\n      };\r\n\r\n      preloadImg.onerror = () => {\r\n        // 如果预加载失败，回退到直接重新初始化\r\n        console.warn(\"主题背景图预加载失败，回退到直接切换\");\r\n        this.reinitializeBackground(configKey, containerSelector, useDefaultBackground);\r\n      };\r\n\r\n      preloadImg.src = newThemeImage;\r\n    },\r\n\r\n    /**\r\n     * 重新初始化背景图（用于响应配置变化）\r\n     */\r\n    reinitializeBackground(configKey, containerSelector = \".login\", useDefaultBackground = false) {\r\n      this.clearBackgroundInterval();\r\n      this.clearBackgroundImages(true); // 使用立即清除\r\n      this.bingWallPaperIndex = 0;\r\n      this.customWallPaperIndex = 0;\r\n\r\n      // 延迟一小段时间确保清理完成\r\n      setTimeout(() => {\r\n        this.initializeBackground(configKey, containerSelector, useDefaultBackground);\r\n      }, 100);\r\n    },\r\n  },\r\n};\r\n"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","render","_ctx","_cache","$props","$setup","$data","$options","_component_font_awesome_icon","_component_el_button","innerHTML","backgroundImagesTemplate","onClick","goHome","circle","size","default","icon","_","src","errorImage","alt","type","__","goBack","href","args","goDashboard","refreshPage","name","mixins","backgroundManager","computed","mounted","this","initializeBackground","beforeUnmount","clearBackgroundInterval","methods","$router","push","window","history","length","go","location","reload","__exports__","data","bingWallPaperIndex","customWallPaperIndex","backgroundInterval","backgroundInitParams","mapGetters","bkInterval","userConfig","bkOpacity","backgroundImagesStyles","watch","useDarkMode","newVal","oldVal","$nextTick","smoothThemeTransition","configKey","containerSelector","useDefaultBackground","injectBackgroundStyles","clearInterval","clearBackgroundImages","removeBackgroundStyles","styleId","document","getElementById","style","createElement","id","textContent","head","appendChild","existingStyle","remove","createBackgroundElements","container","console","warn","bg1","className","bg2","insertBefore","firstChild","querySelector","backgroundConfig","setupBingWallpaper","Array","isArray","setupCustomWallpaperCarousel","setupSingleCustomWallpaper","setupDefaultWallpaper","$store","dispatch","then","bingWallPapers","loadBackgroundImage","setInterval","switchWallpaper","wallpapers","wallpaperUrl","isDark","defaultImage","require","imgElement","imageSrc","useScale","onload","opacity","transform","requestAnimationFrame","background","curBg","nextBg","immediate","transition","setTimeout","undefined","reinitializeBackground","currentBg","newThemeImage","preloadImg","Image","onerror"],"sourceRoot":""}